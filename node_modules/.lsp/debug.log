Hello - from c:\Users\job1p\.vscode\extensions\jaredly.reason-vscode-1.7.13\bin.native.exe.hot.exe
Previous log location: C:\Users\job1p\AppData\Local\Temp\lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/job1p/Desktop/faks/Advent-of-code-Ocaml/dan5/dan5_1.ml","languageId":"ocaml","version":1,"text":"\r\nlet mx=1000;;\r\nlet my=1000;;\r\nlet mat = Array.make_matrix mx my 0;;\r\n\r\nlet rec updx x y1 y2 =\r\n    if y1<=y2 then\r\n        (mat.(x).(y1)<-(mat.(x).(y1)+1);\r\n        updx x (y1+1) y2)\r\n    else ();;\r\n\r\nlet rec updy y x1 x2 =\r\n    if x1 <=x2 then\r\n        (mat.(x1).(y)<-(mat.(x1).(y)+1);\r\n        updy y (x1 + 1) x2)\r\n    else ();;\r\n\r\n(*let rec upddia x y1 y2 =\r\n    if y1<=y2 then\r\n        (mat.(x).(y1)<-(mat.(x).(y1)+1);\r\n        upddia x (y1+1) (y2+1))\r\n    else ();;*)\r\n\r\nlet update x1 y1 x2 y2 =\r\n    if x1 = x2 then \r\n        updx x1 (min y1 y2) (max y1 y2)\r\n    else if y1 = y2 then \r\n        updy y1 (min x1 x2) (max x1 x2)\r\n    else ();;\r\n\r\n\r\nlet ime_datoteke= \"day_5.in\";;\r\nlet chan = Scanf.Scanning.open_in_bin ime_datoteke;;\r\nlet () =\r\n    try\r\n        while true; do\r\n            Scanf.bscanf chan \"%d,%d -> %d,%d\\n\" update\r\n        done;\r\n    with End_of_file ->\r\n        Scanf.Scanning.close_in chan;;\r\n\r\nlet rec prestej x y =\r\n    if y=my then 0\r\n    else if x=mx then (prestej 0 (y+1))\r\n    else (if (mat.(x).(y)>=2) then 1 + (prestej (x+1) y) else (prestej (x+1) y));;\r\n\r\nlet izpisi_datoteko ime_datoteke vsebina =\r\n    let chan = open_out_bin ime_datoteke in\r\n    output_string chan vsebina;\r\n    close_out chan\r\n\r\nlet () =\r\n    izpisi_datoteko \"day_5_1.out\" (string_of_int (prestej 0 0))"}}}
