Hello - from c:\Users\job1p\.vscode\extensions\jaredly.reason-vscode-1.7.13\bin.native.exe.hot.exe
Previous log location: C:\Users\job1p\AppData\Local\Temp\lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/job1p/Desktop/faks/Advent-of-code-Ocaml/dan2/dan2.ml","languageId":"ocaml","version":1,"text":"(*load funkcija je skopirana od Luka Horjaka *) \r\nlet load vsebina_datoteke =\r\n    let s = String.split_on_char '\\n' vsebina_datoteke in\r\n    s |> List.map String.trim |> List.map (String.split_on_char ' ')\r\n\r\nlet naloga1 vsebina_datoteke =\r\n    let rec aux cx cy vrstice=\r\n        match vrstice with\r\n        | [\"forward\";kok] :: rep -> aux cx (cy+int_of_string(kok)) rep\r\n        | [\"down\";kok] :: rep -> aux (cx+int_of_string(kok)) cy rep\r\n        | [\"up\";kok] :: rep -> aux (cx-int_of_string(kok)) cy rep\r\n        | [] -> (cx * cy)\r\n        | _ -> 0\r\n    in\r\n    let odg = aux 0 0 (load vsebina_datoteke) in\r\n    string_of_int odg\r\n\r\nlet naloga2 vsebina_datoteke =\r\n    let rec aux hp depth aim vrstice=\r\n        match vrstice with\r\n        | [\"up\";kok] :: rep -> aux hp depth (aim-int_of_string(kok)) rep\r\n        | [\"down\";kok] :: rep -> aux hp depth (aim+int_of_string(kok)) rep\r\n        | [\"forward\";kok] :: rep -> aux (hp+int_of_string(kok)) (depth + (aim * int_of_string(kok))) aim rep \r\n        | [] -> (hp * depth)\r\n        | _ -> 0\r\n    in\r\n    let odg = aux 0 0 0 (load vsebina_datoteke) in\r\n    string_of_int odg\r\n\r\nlet _ =\r\n    let preberi_datoteko ime_datoteke =\r\n        let chan = open_in_bin ime_datoteke in\r\n        let vsebina = really_input_string chan (in_channel_length chan) in\r\n        close_in chan;\r\n        vsebina\r\n    and izpisi_datoteko ime_datoteke vsebina =\r\n        let chan = open_out_bin ime_datoteke in\r\n        output_string chan vsebina;\r\n        close_out chan\r\n    in\r\n    let vsebina_datoteke = preberi_datoteko \"day_2.in\" in\r\n    let odgovor1 = naloga1 vsebina_datoteke\r\n    and odgovor2 = naloga2 vsebina_datoteke\r\n    in\r\n    izpisi_datoteko \"day_2_1.out\" odgovor1;\r\n    izpisi_datoteko \"day_2_2.out\" odgovor2"}}}
